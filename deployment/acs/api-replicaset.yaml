apiVersion: extensions/v1beta1
kind: ReplicaSet
metadata:
  name: acstest-api
  # these labels can be applied automatically
  # from the labels in the pod template if not set
  labels:
    app: acstest
    tier: internal-api
spec:
  replicas: 3
  # selector can be applied automatically
  # from the labels in the pod template if not set,
  # but we are specifying the selector here to
  # demonstrate its usage.
  selector:
    matchLabels:
      tier: internal-api
    matchExpressions:
      - {key: tier, operator: In, values: [internal-api]}
  template:
    metadata:
      labels:
        app: acstest
        tier: internal-api
    spec:
      containers:
      - name: acstest-api
        image: richardcase/acstest-api:1.0.0
        # ReadinessProbe: indicates whether the container is ready to service requests.
        # If the ReadinessProbe fails, the endpoints controller will remove the
        # podâ€™s IP address from the endpoints of all services that match the pod.
        # The default state of Readiness before the initial delay is Failure.
        #
        # Checks every w seconds, after 2 second initial wait
        # Fails after 2 probes => failureThreshold * periodSeconds = 4s
        # It means that after 4s the Service doesn't send more traffic to the pod
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /health
            port: 80
            scheme: HTTP
          initialDelaySeconds: 2
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        # LivenessProbe: indicates whether the container is live, i.e. running.
        # If the LivenessProbe fails, the kubelet will kill the container and
        # the container will be subjected to its RestartPolicy.
        # The default state of Liveness before the initial delay is Success
        #
        # Checks every 10 seconds, after 5 second initial wait
        # Fails after 3 probes => failureThreshold * periodSeconds = 30s
        # Timeout is 1s (1000ms), that's why we use promise timeout with 900ms
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 80
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        # Pod (app instance) listens on this port
        ports:
          - containerPort: 80